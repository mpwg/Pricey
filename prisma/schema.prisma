// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  priceAlerts   PriceAlert[]
  savedProducts SavedProduct[]

  @@map("users")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  imageUrl    String?
  category    String?
  brand       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  prices        Price[]
  priceAlerts   PriceAlert[]
  savedProducts SavedProduct[]
  invoiceItems  InvoiceItem[]

  @@index([category])
  @@index([brand])
  @@map("products")
}

model Price {
  id        String   @id @default(cuid())
  productId String
  retailer  String
  price     Float
  currency  String   @default("USD")
  url       String
  inStock   Boolean  @default(true)
  scrapedAt DateTime @default(now())

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@index([retailer])
  @@index([scrapedAt])
  @@map("prices")
}

model PriceAlert {
  id          String   @id @default(cuid())
  userId      String
  productId   String
  targetPrice Float
  active      Boolean  @default(true)
  notified    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([productId])
  @@index([active])
  @@map("price_alerts")
}

model SavedProduct {
  id        String   @id @default(cuid())
  userId    String
  productId String
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@index([userId])
  @@map("saved_products")
}

model InvoiceItem {
  id               String   @id @default(cuid())
  productId        String
  date             DateTime
  storeDescription String   // Bezeichnung lt. Geschäft
  price            Float
  unit             String   // Einheit (z.B. "kg", "Stück", "l", etc.)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@index([date])
  @@map("invoice_items")
}
