# Docker Compose for Pricy Production
# Copyright (C) 2025 Matthias Wallner-GÃ©hri
# Licensed under AGPL-3.0

version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:18-alpine
    container_name: pricy-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-pricy}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
      POSTGRES_DB: ${POSTGRES_DB:-pricy}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-pricy}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pricy-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: pricy-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:?REDIS_PASSWORD is required}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', '--auth', '${REDIS_PASSWORD}', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - pricy-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  minio:
    image: minio/minio:latest
    container_name: pricy-minio-prod
    restart: unless-stopped
    command: server /data --console-address ':9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:?MINIO_ROOT_USER is required}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:?MINIO_ROOT_PASSWORD is required}
    ports:
      - '${MINIO_PORT:-9000}:9000'
      - '${MINIO_CONSOLE_PORT:-9001}:9001'
    volumes:
      - minio_data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - pricy-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  api-gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.api-gateway
    container_name: pricy-api-gateway-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://${POSTGRES_USER:-pricy}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-pricy}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      LOG_LEVEL: info
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-100}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-60000}
    ports:
      - '${API_PORT:-3001}:3001'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:3001/health']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pricy-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  pricy-network:
    driver: bridge
