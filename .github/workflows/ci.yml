name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

env:
    NODE_VERSION: "20"

jobs:
    # Lint and Type Check
    lint-and-typecheck:
        name: Lint & Type Check
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Generate Prisma Client
              run: npm run prisma:generate

            - name: Run ESLint
              run: npm run lint

            - name: Run TypeScript type check
              run: npm run type-check

    # Build and Test
    build:
        name: Build Application
        runs-on: ubuntu-latest
        needs: lint-and-typecheck

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Generate Prisma Client
              run: npm run prisma:generate

            - name: Build Next.js application
              run: npm run build
              env:
                  DATABASE_URL: postgresql://user:password@localhost:5432/test_db
                  REDIS_URL: redis://localhost:6379
                  NEXT_PUBLIC_APP_URL: http://localhost:3000

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: .next
                  retention-days: 7

    # Database Migration Check
    prisma-check:
        name: Check Prisma Schema
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:16-alpine
                env:
                    POSTGRES_USER: test
                    POSTGRES_PASSWORD: test
                    POSTGRES_DB: test_db
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Generate Prisma Client
              run: npm run prisma:generate

            - name: Run Prisma migrations
              run: npx prisma migrate deploy
              env:
                  DATABASE_URL: postgresql://test:test@localhost:5432/test_db

            - name: Validate Prisma schema
              run: npx prisma validate
